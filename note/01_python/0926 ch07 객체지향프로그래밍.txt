7장 객체지향 프로그래밍
- class : 속성(변수)와 메소드(함수)를 갖는 객체를 만들기 위한 설계도
	모든 class는 Object를 상속받을
	
- class 내에서는 생성자(생성자가 없ㄷ으면 디폴트생성자 자동생성) 및 소멸자

  인스턴스 변수(일반변수) vs 클래스변수 vs static 변수
  인스턴스메소드(일반함수) vs 클래스메소드 vs static 메소드

- class 클래스면(상속받을 클래스명)
	클르새변수
	__STATIC 변수
	def __init_(self,[매개변수,..]):
		self,인스턴스변수 = 매개변수
	DEF __DEL__(SELF):
		객체소멸시 수행할 명령어
	DEF 인스턴스메소드명(SELF,[매개변수,..]):
		명령어
	@classmethod
	DEF 클래스메소드명(CLS,[매개변수..]):
		CLS,클래스변수와 관련된 로직(클래스명, 클래스메소드명() 호출)
	@staticmethod
	DEF STATIC메소드면([매개변수..}):
		클래스변수나 인스턴스변수나 STATIC변수가 없는 로직
     변수명 = 클래스명()
P = PERSON("홍길도","남자")


-객체(인스턴스변수).__DICT__ = >  객체를 딕셔너리 형태로 보여줌
	EX. P.__DICT__ => {'NAME':'홍길동','GENDER':'남자'}

- SUPER() : '부모클래스의'를 의미